[gd_scene load_steps=6 format=3 uid="uid://dldoayjumq8ai"]

[sub_resource type="Shader" id="Shader_s3tr3"]
code = "shader_type spatial;
render_mode unshaded, cull_front;

uniform bool enable = true;
uniform float outline_thickness = 0.01;
uniform vec4 color : source_color  = vec4(0.0);


void vertex() {
	if (enable) {
		VERTEX += normalize(VERTEX) * outline_thickness;
	}
}

void fragment() {
	if (enable) {
		ALBEDO = color.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vc6g1"]
render_priority = 0
shader = SubResource("Shader_s3tr3")
shader_parameter/enable = true
shader_parameter/outline_thickness = 0.01
shader_parameter/color = Color(0, 0, 0, 0)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_um0xn"]
next_pass = SubResource("ShaderMaterial_vc6g1")
diffuse_mode = 3
specular_mode = 1
albedo_color = Color(0, 0.615686, 0.905882, 1)
roughness = 0.04

[sub_resource type="SphereMesh" id="SphereMesh_nxgow"]

[sub_resource type="BoxMesh" id="BoxMesh_xhb0b"]

[node name="Node3D" type="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
material_override = SubResource("StandardMaterial3D_um0xn")
mesh = SubResource("SphereMesh_nxgow")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 4.44475, 0, 0, 0, 3.76321, 2.30899, 0, 0)
material_override = SubResource("StandardMaterial3D_um0xn")
mesh = SubResource("BoxMesh_xhb0b")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.28226, 0.244465, 2.38419e-07)
